// @TODO Style mandatory checkboxes https://d.pr/i/KAZKV6

:root{  
  // TYPOGRAPHY LABEL
  --label-font-family: var(--default_font-family);
  --label-color: initial;
  --label-font-size: var(--root_font-size);
  --label-font-weight: initial;
  --label-line-height: initial;

  // TYPOGRAPHY INPUT
  --input_font-family: var(--default_font-family);
  --input_color: #000000;
  --input_font-size: var(--root_font-size);
  --input_font-weight: initial;
  --input_line-height: initial;
  --input_background-color: #fafafa;
  --input_border-width: 1px;
  --input_border-color: #dfdfe1;
  --input_border-radius: 6px;
  --input_placeholder-color: var(--color_light-gray);
  --input_box-shadow: inset 0 2px 2px -1px rgba(74, 74, 104, 0.1);
  --input_padding: 1ch 1.2ch;
      
  // TYPOGRAPHY INPUT:FOCUS
  // TYPOGRAPHY INPUT:HOVER
  --input_color_hover: var(--input_color);
  --input_background-color_hover: var(--input_background-color);
  --input_border-color_hover: #767677;
  --input_border-bottom-color_hover: var(--input_border-color_hover);
  --input_box-shadow_hover: var(--input_box-shadow);
      
  // TYPOGRAPHY RADIO
  --radio_content: "";
  --radio_color: var(--input_color);
  --radio_background-color: var(--input_background-color);
  --radio_border-width: var(--input_border-width);
  --radio_border-color: var(--input_border-color);
  --radio_border-radius: 50%;
  --radio_box-shadow: none;
  --radio_width: 1.4rem;
  --radio_height: 1.4rem;

  // TYPOGRAPHY RADIO INPUT:FOCUS
  // TYPOGRAPHY RADIO INPUT:HOVER
  --radio_color_hover: var(--radio_color);
  --radio_background-color_hover: var(--radio_background-color);
  --radio_border-color_hover: var(--input_border-color_hover);
  --radio_box-shadow_hover: inset 0 0 0 6px #f5f5f5;

  // TYPOGRAPHY RADIO INPUT:SELECTED
  --radio_color_selected: var(--radio_color_hover);
  --radio_background-color_selected: var(--radio_background-color_hover);
  --radio_border-color_selected: var(--input_border-color_hover);
  --radio_box-shadow_selected: inset 0 0 0 6px #000000;

  // TYPOGRAPHY CHECKBOX
  --checkbox_color: var(--color_black);
  --checkbox_background-color: var(--radio_background-color);
  --checkbox_border-width: 1px;
  --checkbox_border-color: var(--radio_border-color);
  --checkbox_border-radius: var(--input_border-radius);
  --checkbox_font-weight: 700;
  --checkbox_width: 1.4rem;
  --checkbox_height: 1.4rem;

  // TYPOGRAPHY CHECKBOX INPUT:FOCUS
  // TYPOGRAPHY CHECKBOX INPUT:HOVER
  --checkbox_color_hover: var(--checkbox_color);
  --checkbox_background-color_hover: var(--radio_background-color_hover);
  --checkbox_border-color_hover: var(--radio_border-color_hover);

  // TYPOGRAPHY CHECKBOX INPUT:CHECKED
  --checkbox_content_checked:"✓";
  --checkbox_color_checked: var(--checkbox_color_hover);
  --checkbox_background-color_checked: var(--radio_background-color_hover);
  --checkbox_border-color_checked: var(--color_black);

  // TYPOGRAPHY SELECT
  --select_font-family: var(--default_font-family);
  --select_color: var(--input_color);
  --select_font-size: var(--root_font-size);
  --select_font-weight: initial;
  --select_line-height: initial;
  --select_background-color: var(--input_background-color);
  --select_border-width: 1px;
  --select_border-color: var(--input_border-color);
  --select_border-radius: var(--input_border-radius);
  --select_box-shadow: var(--input_box-shadow);
  --select_padding: 1ch 1.2ch;

  // TYPOGRAPHY SELECT:FOCUS
  // TYPOGRAPHY SELECT:HOVER
  --select_color_hover: var(--select_color);
  --select_background-color_hover: var(--select_background-color);
  --select_border-color_hover: var(--input_border-color_hover);
  --select_border-bottom-color_hover: var(--select_border-color_hover);
  --select_box-shadow_hover: var(--input_box-shadow_hover);

  // TYPOGRAPHY TEXTAREA
  --textarea_font-family: var(--default_font-family);
  --textarea_color: var(--input_color);
  --textarea_font-size: var(--root_font-size);
  --textarea_font-weight: initial;
  --textarea_line-height: initial;
  --textarea_background-color: var(--input_background-color);
  --textarea_border-width: 1px;
  --textarea_border-color: var(--input_border-color);
  --textarea_border-radius: var(--input_border-radius);
  --textarea_placeholder-color: var(--color_light-gray);
  --textarea_box-shadow: var(--input_box-shadow);
  --textarea_padding: 1ch 1.2ch;
      
  // TYPOGRAPHY TEXTAREA:FOCUS
  // TYPOGRAPHY TEXTAREA:HOVER
  --textarea_color_hover: var(--textarea_color);
  --textarea_background-color_hover: var(--textarea_background-color);
  --textarea_border-color_hover: var(--input_border-color_hover);
  --textarea_border-bottom-color_hover: var(--textarea_border-color_hover);
  --textarea_box-shadow_hover: var(--input_box-shadow_hover);
}

label{
  font-family: var(--label-font-family);
  color: var(--label-color);
  font-size: var(--label-font-size);
  font-weight: var(--label-font-weight);
  line-height: var(--label-line-height);
  display: flex;
}

label a.label-tooltip {
  text-transform: none;
  position: absolute;
  right: 0;
  text-decoration: underline;
  color: var(--label-color);
  font-weight: 400;
}

// The use of "input.en__field__input" is needed to provide enough specificity to suprass class selectors like ".en__field__input--calendar" in enPage.css
input,
input.en__field__input{
  font-family: var(--input_font-family);
  color: var(--input_color);
  font-size: var(--input_font-size);
  font-weight: var(--input_font-weight);
  line-height: var(--input_line-height);
  background-color: var(--input_background-color);
  border-width: var(--input_border-width);
  border-color: var(--input_border-color);
  border-radius: var(--input_border-radius);
  height: auto; // Shared between input, textarea, and select
  max-width: 100%; // Shared between input, textarea, and select
  width: 100%; // Shared between input, textarea, and select
  min-width: initial; // Shared between input, textarea, and select
  display: block; // Shared between input, textarea, and select
  // -webkit-box-sizing: border-box; // Shared between input, textarea, and select
  box-sizing: border-box; // Shared between input, textarea, and select
  margin: 0rem; // Shared between input, textarea, and select
  padding: var(--input_padding);
  transition: box-shadow 0.25s, border-color 0.25s ease-in-out; // Shared between input, textarea, and select
  border-style: solid; // Shared between input, textarea, and select

  &:focus,
  &:hover{
      color: var(--input_color_hover);
      background-color: var(--input_background-color_hover);
      border-color: var(--input_border-color_hover);
      border-bottom-color: var(--input_border-bottom-color_hover);
      // outline: none; // Shared between input:focus, textarea:focus, and select:focus
      box-shadow: var(--input_box-shadow_hover);
  }
}

input[type="text"],
input[type="email"],
input[type="number"],
input[type="textarea"],
input[type="date"],
input[type="tel"],
input[type="password"]{
  box-shadow: var(--input_box-shadow);

  &:focus,
  &:hover{
      box-shadow: var(--input_box-shadow_hover);
  }
}

// Remove the padding set on all other input fields
input[type="range"]{
  padding-left: 0;
  padding-right: 0;
}

// Removes the input shadow added by iOS 5 and later
// https://stackoverflow.com/questions/23211656/remove-ios-input-shadow
// https://app.productive.io/2650-4site-interactive-studios-inc/tasks/1498132
// Should not apply in page builder or it can cause unintentional regressions https://d.pr/i/Z4Rl2l:not(#EN__RootElement)
input[type=text],
:not(#EN__RootElement) input[type=email],
:not(#EN__RootElement) input[type=number],
:not(#EN__RootElement) input[type=tel]{
  // -webkit-appearance: none;
  // -moz-appearance: none;
  appearance: none;
}

input[type=radio]{
  + label{
    cursor: pointer;
    align-items: center;
    display: flex;

    &:before{
      content: var(--radio_content);
      display: flex;
      justify-content: center;
      align-items: center;
      margin-right: 0.5rem;
      color: var(--radio_color);
      background-color: var(--radio_background-color);
      border-style: solid;
      border-width: var(--radio_border-width);
      border-color: var(--radio_border-color);
      border-radius: var(--radio_border-radius);
      height: var(--radio_height);
      width: var(--radio_width);
      box-shadow: var(--radio_box-shadow);
      display: inline-flex;
    }
  }

  &:focus + label:before,
  &:hover + label:before{
    color: var(--radio_color_hover);
    background-color: var(--radio_background-color_hover);
    border-color: var(--radio_border-color_hover);
    box-shadow: var(--radio_box-shadow_hover);
  }

  &:not(:checked) + label:before{
    color: transparent;
  }
  
  &:checked + label:before{
    color: var(--radio_color_selected);
    background-color: var(--radio_background-color_selected);
    border-color: var(--radio_border-color_selected);
    box-shadow: var(--radio_box-shadow_selected);
  }
}

// ✓
input[type=checkbox]{
  + label{
    cursor: pointer;
    content: "";
    align-items: center;
    display: flex;

    &:before{
      content: var(--checkbox_content_checked);
      display: flex;
      justify-content: center;
      align-items: center;
      margin-right: 0.5rem;
      color: var(--checkbox_color);
      background-color: var(--checkbox_background-color);
      border-style: solid;
      border-width: var(--checkbox_border-width);
      border-color: var(--checkbox_border-color);
      border-radius: var(--checkbox_border-radius);
      height: var(--checkbox_height);
      width: var(--checkbox_width);
      display: inline-flex;
      font-weight: var(--checkbox_font-weight);
      flex: 1 0 auto;
    }
  }

  &:focus + label:before,
  &:hover + label:before{
    color: var(--checkbox_color_hover);
    background-color: var(--checkbox_background-color_hover);
    border-color: var(--checkbox_border-color_hover);
  }

  &:not(:checked) + label:before{
    color: transparent;
  }  

  &:checked + label:before{
    color: var(--checkbox_color_checked);
    background-color: var(--checkbox_background-color_checked);
    border-color: var(--checkbox_border-color_checked);
    // box-shadow: inset 0 0 0 var(--checkbox_border-width) var(--checkbox_border-color);
  }  
}

// For checkboxes with only an input and no label
// @TODO See if "en__contactDetails__select" styling can be merged in
.en__twitterTarget__select{
  cursor: pointer;
  visibility: hidden; // Used to hide parent while keeping its pseduo element visible
  max-width: min-content;
  content: "";

  &:before{
    visibility: visible;  // Used to keep psuedo element visible while hiding the parent
    content: var(--checkbox_content_checked);
    display: flex;
    justify-content: center;
    align-items: center;
    // margin-right: 0.5rem;
    color: var(--checkbox_color);
    background-color: var(--checkbox_background-color);
    border-style: solid;
    border-width: var(--checkbox_border-width);
    border-color: var(--checkbox_border-color);
    border-radius: var(--checkbox_border-radius);
    height: var(--checkbox_height);
    width: var(--checkbox_width);
    display: inline-flex;
    font-weight: var(--checkbox_font-weight);
    font-size: calc(0.05552rem * 18);
  }

  &:focus:before,
  &:hover:before{
    color: var(--checkbox_color_hover);
    background-color: var(--checkbox_background-color_hover);
    border-color: var(--checkbox_border-color_hover);
  }

  &:not(:checked):before{
    color: transparent;
  }  

  &:checked:before{
    color: var(--checkbox_color_checked);
    background-color: var(--checkbox_background-color_checked);
    border-color: var(--checkbox_border-color_checked);
    // box-shadow: inset 0 0 0 var(--checkbox_border-width) var(--checkbox_border-color);
  }  
}

select,
select.en__field__input--select,
select.en__field__input--splitselect,
select.en__field__input--tripleselect{
  font-family: var(--select_font-family);
  color: var(--select_color);
  font-size: var(--select_font-size);
  font-weight: var(--select_font-weight);
  line-height: var(--select_line-height);
  background-color: var(--select_background-color);
  border-width: var(--select_border-width);
  border-color: var(--select_border-color);
  border-radius: var(--select_border-radius);
  cursor: pointer;
  height: auto; // Shared between input, textarea, and select
  max-width: 100%; // Shared between input, textarea, and select
  width: 100%; // Shared between input, textarea, and select
  min-width: initial; // Shared between input, textarea, and select
  display: block; // Shared between input, textarea, and select
  // -webkit-box-sizing: border-box; // Shared between input, textarea, and select
  box-sizing: border-box; // Shared between input, textarea, and select
  margin: 0rem; // Shared between input, textarea, and select
  padding: var(--select_padding);
  box-shadow: var(--select_box-shadow);
  transition: box-shadow 0.25s, border-color 0.25s ease-in-out; // Shared between input, textarea, and select
  border-style: solid; // Shared between input, textarea, and select
  appearance: none; // This hides the native down arrow and replaces it with our custom down arrow set as the background-image
  padding-right: 2.4ch;
  background-image: url("data:image/svg+xml;utf8,<svg xmlns='http://www.w3.org/2000/svg' version='1.1' width='32' height='24' viewBox='0 0 32 24'><polygon points='0,0 32,0 16,24' style='fill: rgb(0, 0, 0)'></polygon></svg>");
  background-origin: content-box;
  background-position: calc(100% + 1.2ch + (.375rem / 2)) center;
  background-repeat: no-repeat;
  background-size: 0.5625rem 0.375rem;

  &:focus,
  &:hover{
      color: var(--select_color_hover);
      background-color: var(--select_background-color_hover);
      background-image: url("data:image/svg+xml;utf8,<svg xmlns='http://www.w3.org/2000/svg' version='1.1' width='32' height='24' viewBox='0 0 32 24'><polygon points='0,0 32,0 16,24' style='fill: rgb(0, 0, 0)'></polygon></svg>");
      border-color: var(--select_border-color_hover);
      border-bottom-color: var(--select_border-bottom-color_hover);
      // outline: none; // Shared between input:focus, textarea:focus, and select:focus
      box-shadow: var(--select_box-shadow_hover);
  }

}

textarea,
.en__contactMessage__plainText{
  font-family: var(--textarea_font-family);
  color: var(--textarea_color);
  font-size: var(--textarea_font-size);
  font-weight: var(--textarea_font-weight);
  line-height: var(--textarea_line-height);
  background-color: var(--textarea_background-color);
  border-width: var(--textarea_border-width);
  border-color: var(--textarea_border-color);
  border-radius: var(--textarea_border-radius);
  height: auto; // Shared between input, textarea, and select
  max-width: 100%; // Shared between input, textarea, and select
  width: 100%; // Shared between input, textarea, and select
  min-width: initial; // Shared between input, textarea, and select
  display: block; // Shared between input, textarea, and select
  // -webkit-box-sizing: border-box; // Shared between input, textarea, and select
  box-sizing: border-box; // Shared between input, textarea, and select
  margin: 0rem; // Shared between input, textarea, and select
  padding: var(--textarea_padding);
  border-style: solid; // Shared between input, textarea, and select
  box-shadow: var(--textarea_box-shadow);
  transition: box-shadow 0.25s, border-color 0.25s ease-in-out; // Shared between input, textarea, and select
  height: 7rem;
  resize: vertical;

  &:focus,
  &:hover{
      color: var(--textarea_color_hover);
      background-color: var(--textarea_background-color_hover);
      border-color: var(--textarea_border-color_hover);
      border-bottom-color: var(--textarea_border-bottom-color_hover);
      // outline: none; // Shared between input:focus, textarea:focus, and select:focus
      box-shadow: var(--textarea_box-shadow_hover);
  }
}


// Engaging Networks Overrides and Fixes
.en__field__item {
  padding: initial;
}

.en__field__item,
.en__field__element--calendar,
.en__field__element--checkbox,
.en__field__element--email,
.en__field__element--number,
.en__field__element--password,
.en__field__element--radio,
.en__field__element--range,
.en__field__element--rating,
.en__field__element--select,
.en__field__element--splitselect,
.en__field__element--splittext,
.en__field__element--telephone,
.en__field__element--text,
.en__field__element--textarea,
.en__field__element--tripleselect,
.en__field__element--tripletext {
  display: flex;
  flex-wrap: wrap;
}

/* Reset height */
.en__field__input--textarea {
  height: auto;
  width: 100%;
}

/************************************
    * General overrides of EN styles
    ***********************************/

/* In the event Theme CSS causes a hidden field to become displayed, force its display to remain hidden */
/* This was an issue originally reported by EN staff, not sure if it still persists with recent styling updates */
.en__hidden {
  display: none !important;
}

.en__field,
.en__captcha {
  padding-bottom: 0;
  margin-bottom: 1rem;
  display: flex;
  flex-direction: column;
  position: relative;
}

/* For inputs with multiple components, apply the bottom margin to the field items so that if they wrap they maintain vertical spacing between them */
/*
  .en__component .en__field.en__field--radio,
  .en__component .en__field.en__field--checkbox,
  .en__component .en__field.en__field--splittext,
  .en__component .en__field.en__field--tripletext,
  .en__component .en__field.en__field--splitselect,
  .en__component .en__field.en__field--tripleselect{
  margin-bottom: 0;
  }*/

/* Make the spacing between wrapping elements tighter so the user knows they're related */

.en__field--select .en__field__item:not(.en__field__item--other),
.en__field--radio .en__field__item:not(.en__field__item--other),
.en__field--checkbox .en__field__item:not(.en__field__item--other),
.en__field--splittext .en__field__item:not(.en__field__item--other),
.en__field--tripletext .en__field__item:not(.en__field__item--other),
.en__field--splitselect .en__field__item:not(.en__field__item--other),
.en__field--tripleselect .en__field__item:not(.en__field__item--other) {
  margin-bottom: 0.5rem;
  // margin-right: 1rem;
  display: flex;
  // flex-grow: 1; /* Fields should expand to fill their flexbox container */
  align-items: center;
  // width: 100%;
}

.en__component div[class*="withOther"].en__field .en__field__item {
  margin-bottom: 0.5rem;
  // margin-right: 1rem;
}

/* If the form field has a hidden "other" field we need to remove the end of row spacing */
/* NEED TO REVISIT FOR CODE CLEANUP */

.en__component--formblock
  .en__field--withOther
  div.en__field__item:nth-last-child(2) {
  margin-right: 0px;
}

.en__component--formblock .en__field:only-child,
.en__component--formblock .en__field div.en__field__item:only-child {
  margin-left: 0;
  margin-right: 0;
}

.en__component--formblock .row-wrap .en__field,
.en__component--formblock .row-wrap .en__field div.en__field__item {
  margin-left: 0.5rem;
  margin-right: 0.5rem;
}

/************************************
* Inputs
***********************************/

/**
      * Form Block Component: Select Fields
      * Overrides EN Default Styling to ensure mobile friendly widths
      */
.en__field__input--select {
  min-width: initial !important;
}

/* Custom Styling for Radio & Checkbox Inputs */
input.en__field__input--radio,
input.en__field__input--checkbox,
input.en__contactDetails__select {
  border: 0;
  clip: rect(0 0 0 0);
  -webkit-clip-path: inset(50%);
  clip-path: inset(50%);
  height: 1px;
  margin: -1px;
  overflow: hidden;
  padding: 0;
  position: absolute;
  width: 1px;
  white-space: nowrap;
}

/* Helps when the field label gets additional content added to it. https://d.pr/v/9rFaiW */
.en__field__label{
  position: relative;
}

// .en__field__input--radio + .en__field__label,
// .en__field__input--checkbox + .en__field__label {
//   position: relative;
//   margin-left: 2rem;
//   cursor: pointer;
//   display: flex;
//   align-items: center;
// }

.en__contactDetails__rows {
  flex-direction: column;
  align-items: flex-start;
  width: 100%;
  flex-basis: 100%;
  margin-left: calc(var(--checkbox_width) + 0.5rem);
}

// .en__field__input--radio + .en__field__label:before,
// .en__field__input--checkbox + .en__field__label:before,
.en__contacts:not(.en__contacts--hideCheck) .en__contactDetails__rows:before {
  content: "";
  position: absolute;
  height: var(--checkbox_height);
  width: var(--checkbox_width);
  // left: -2rem;
  display: inline-block;
  vertical-align: middle;
  border: 1px solid var(--color_black);
  // -webkit-box-shadow: inset 0 0 0 5px var(--color_white);
  box-shadow: inset 0 0 0 5px var(--color_white);
  background-color: var(--color_white);
  cursor: pointer;
  // -webkit-transition-duration: 0.25s;
  transition-duration: 0.25s;
  // -webkit-transition-property: border-color, background-color;
  transition-property: border-color, background-color;
  top: 5px;
  left: 0;
}

// .en__field__input--radio + .en__field__label:before {
//   border-radius: var(--radio_border-radius);
// }

// .en__field__input--checkbox + .en__field__label:before,
.en__contactDetails__rows:before {
  color: var(--checkbox_color);
  border-radius: var(--checkbox_border-radius);
  border-width: var(--checkbox_border-width);
  background-color: var(--checkbox_background-color);
  // -webkit-box-shadow: none;
  box-shadow: none;
}

// @TODO In addition to a "Checked" state, add a hover for checked and unchecked states
// e.g. .en__contactDetails__select + .en__contactDetails__rows:hover:before
// This might also include adding a cursor effect to show that the label is clickable

// @TODO Change the checkbox checkmark to use an SVG Data URI or similar
// @BODY Currently, the checkbox checkmark uses the checkmark character, but if the font doesn't have this character or the designer wants to use something else, it falls apart. We should switch to an "image" based solution. Ideally, it would be a data-uri and not require a separate image asset. This should be added as default and client SCSS variable where the necessary CSS are mapped to custom properties.
// REF: Cross browser tested radio / checkbox stylings https://codepen.io/aaroniker/pen/ZEYoxEY

// .en__field__input--radio:checked + .en__field__label:before {
//   color: var(--radio_color_selected);
//   background-color: var(--radio_radio-background-color);
//   // -webkit-box-shadow: inset 0 0 0 4px var(--radio_background-color);
//   box-shadow: inset 0 0 0 4px var(--radio_background-color);
//   border-width: var(--radio_border-width);
// }

// .en__field__input--checkbox:checked + .en__field__label:before,
.en__contacts:not(.en__contacts--hideCheck)
  .en__contactDetails__select:checked
  + .en__contactDetails__rows:before {
  color: var(--checkbox_color_checked);
  background-color: var(--checkbox_background-color_checked);
  // -webkit-box-shadow: inset 0 0 0 0 var(--checkbox_background-color);
  box-shadow: inset 0 0 0 0 var(--checkbox_background-color);
  border-width: var(--checkbox_border-width);
  border-color: var(--checkbox_border-color);
}

// .en__field__input--checkbox:checked + .en__field__label::after,
.en__contacts:not(.en__contacts--hideCheck)
  .en__contactDetails__select:checked
  + .en__contactDetails__rows::after {
  // Needs and SVG safe color passed in https://stackoverflow.com/questions/25477819/scss-variable-in-background-image-with-svg-image-data-uri
  // content: url("data:image/svg+xml;utf8,<svg xmlns='http://www.w3.org/2000/svg' width='21' height='16' viewBox='0 0 21 16'><path fill="#color-white" fill-rule='nonzero' d='M18.76.16L6.68 12.113l-4.44-4.392a.555.555 0 0 0-.779 0L.161 9.006a.541.541 0 0 0 0 .771L6.29 15.84a.555.555 0 0 0 .78 0l13.77-13.624a.541.541 0 0 0 0-.771L19.539.16a.555.555 0 0 0-.779 0z'/></svg>");
  // fill: var(--color_cta);
  content: "✓"; // REF: https://www.toptal.com/designers/htmlarrows/symbols/check-mark/
  position: absolute;
  left: 4px;
  top: 5px;
  // width: 21px;
  // height: 16px;
  color: var(--checkbox_color);
  background-color: transparent;
  font-size: calc(0.05552rem * 18);
  font-weight: var(--checkbox_font-weight);
  cursor: pointer;
}

/* QA Needed: Would like to find a way so that radio input focus is round rather than square. May require re-writing how radio inputs are styled */
.en__field__input--radio:focus + .en__field__label:before,
.en__field__input--checkbox:focus + .en__field__label:before,
.en__contactDetails__select:focus + .en__contactDetails__rows:before {
  // outline: var(--color_gray) auto 0.3125rem;
  // border-color: var(--input_border-color_checked);
}

.en__field__input--radio:focus + .en__field__label,
.en__field__input--checkbox:focus + .en__field__label,
.en__contactDetails__select:focus + .en__contactDetails__rows {
  // outline: 2px solid var(--input_border-color_checked);
  // outline-offset: 3px;
  outline: -webkit-focus-ring-color auto 1px;
  outline-offset: 3px;
}

/* QA Needed: EN's hidden input field */
.en__field--hidden {
  display: block;
  width: 100% !important;
}

/* Uses Padding instead of Margin because padding is counted in the Flex-basis width whereas Margin is outside */
/* One optimization idea is to break this file up into three CSS files, 1-10, 11-20, and 21-30. That was they can be included only if that template is using them. */
/* Should confirm if the EN class field could even hold enough chars to fit defining 20 fields plus their start/stop classes */
/* Why 20 pre-defined options? To cover a single form component with all of the following: * 1. First Name (50%) | 2. Last Name (50%) * 3. Email (100%) * 4. Email Opt-in (100%) * 5. Phone (100%) * 6. Phone Opt-in (100%) * 7. Street (100%) * 8. Street 2 (100%) * 9. City (33%) | 10. State (33%) | 11. Zip (33%) * 12. Country (100%) * 13. Giving Frequency (100%) * 14. Giving Amount (100%) * 15. Gift Type (100%) * 16. Credit Card Number (100%) * 17. Credit Card Expiration (50%) | 18. Credit Card CVV (50%) * 19. Custom Field (100%) * 20. Custom Field (100%) */
/* Make all en fields 100% */
.en__field {
  flex-basis: 100%;
  padding-bottom: 1rem;
  margin-bottom: 0rem;
}

// For Coumpound Fields that Wrap
.en__field--splittext,
.en__field--tripletext,
.en__field--splitselect,
.en__field--tripleselect,
.en__field--radio,
.en__field--checkbox,
.en__field--rating,
.en__field--imgselect,
.en__field--withOther{
  min-width: calc(100% + 1rem); // Accounts for negative margin
  position: relative;
  left: -0.5rem; // Negative margins are allowed so that the buttons can reflow onto new lines without unexpected issues with padding on wrap
  right: -0.5rem; // Negative margins are allowed so that the buttons can reflow onto new lines without unexpected issues with padding on wrap

  > .en__field__label,
  > .en__field__helpText{
    padding-left: 0.5rem;
    padding-right: 0.5rem;
  }

}

// .en__field:not([class*="withOther"]):not([class*="split"]):not([class*="triple"]):not([class*="range"]):not([class*="password"]):not([class*="number"]):not([class*="uneditable"]):not([class*="telephone"]):not([class*="rating"]):not([class*="calendar"]):not([class*="image-select"]) > {

// }

.en__field__item{
  padding-left: 0.5rem;
  padding-right: 0.5rem;
}

/* The first form field in a form block component does not need any left padding */
.en__field:first-of-type,
.en__field__item:first-of-type {
  // padding-left: 0;
}
/* The last form field in a form block component does not need any right padding */
.en__field:last-of-type,
.en__field__item:last-of-type {
  // padding-right: 0;
}

// Remove the right padding from the element responsible for showing the Other Input
.en__field--withOther .en__field__item:nth-last-child(2) {
  // padding-right: 0;
}

// Place all the padding for the Other Input on the Other Input so that it's only used when it's visible
.en__field--withOther .en__field__item:last-child{
  // padding-left: 1rem;
}

// @TODO Style "Radios with Input" to be a in a column instead of a row. Will need to use CSS Grid and not Flexbox. This is so that the last Radio when selected has the input field displayed to its immediate right on desktop and below on mobile https://d.pr/v/Ed9lyE

.en__field__element--splittext,
.en__field__element--splitselect,
.en__field__element--tripleselect {
  align-items: flex-start;
}

/* Includes overrides of existing CSS, need for resolve this duplicate styling */
.en__field__element--splittext .en__field__item:nth-of-type(1),
.en__field__element--splitselect:not(.en__field--ccexpire)
  .en__field__item:nth-of-type(1) {
  flex-basis: 50%;
  padding-bottom: 0.5rem;
  margin: 0;
}

/* Includes overrides of existing CSS, need for resolve this duplicate styling */
.en__field__element--splittext .en__field__item:nth-of-type(2),
.en__field__element--splitselect:not(.en__field--ccexpire)
  .en__field__item:nth-of-type(2) {
  flex-basis: 50%;
  padding-bottom: 0.5rem;
  margin: 0;
}

/* Includes overrides of existing CSS, need for resolve this duplicate styling */
.en__field__element--tripletext .en__field__item:nth-of-type(1),
.en__field__element--tripleselect .en__field__item:nth-of-type(1) {
  flex-basis: calc(100% / 3);
  padding-bottom: 0.5rem;
  margin: 0;
}

/* Includes overrides of existing CSS, need for resolve this duplicate styling */
.en__field__element--tripletext .en__field__item:nth-of-type(2),
.en__field__element--tripleselect .en__field__item:nth-of-type(2) {
  flex-basis: calc(100% / 3);
  // padding-left: 0.5rem;
  // padding-right: 0.5rem;
  padding-bottom: 0.5rem;
  margin: 0;
}

/* Includes overrides of existing CSS, need for resolve this duplicate styling */
.en__field__element--tripletext .en__field__item:nth-of-type(3),
.en__field__element--tripleselect .en__field__item:nth-of-type(3) {
  flex-basis: calc(100% / 3);
  padding-bottom: 0.5rem;
  margin: 0;
}

.en__field__element--imgselect{
  display: flex;
  flex-wrap: wrap;
}

.en__field--engrid-image-select .en__field__item{
  flex-basis: calc(100% / 3);
}

// .en__field--engrid-image-select .en__field__item:nth-of-type(3n+1){
//   flex-basis: calc(100% / 3);
//   padding-left: 0rem;
//   padding-right: 0.5rem;
//   padding-bottom: 0.5rem;
//   margin: 0;
// }

// .en__field--engrid-image-select .en__field__item:nth-of-type(3n+2){
//   flex-basis: calc(100% / 3);
//   padding-left: 0.5rem;
//   padding-right: 0.5rem;
//   padding-bottom: 0.5rem;
//   margin: 0;
// }

// .en__field--engrid-image-select .en__field__item:nth-of-type(3n+3){
//   flex-basis: calc(100% / 3);
//   padding-left: 0.5rem;
//   padding-right: 0rem;
//   padding-bottom: 0.5rem;
//   margin: 0;
// }

.en__imageSelectField__control{
  display: flex;
  flex-direction: column;
  align-items: center;

  .en__field__input--imageSelectField{
    width: auto;
  }
}

.en__field--engrid-image-select .en__imageSelectField{
  display: flex;
  flex-direction: column;
}

.en__imageSelectField__image{
  padding-bottom: 0.5rem;
}

.en__field--withOther .en__field__element--select .en__field__item:first-child {
  margin-right: 0 !important;
}

/* Custom Styles */

// Inline Country Helper
.inline-country .en__field--country {
  position: absolute;
  right: 0;
  align-items: flex-end;
  // label{
  //   visibility: hidden;
  // }
  select {
    width: 80px;
    // z-index: 1;
    background-color: transparent;
    // -webkit-box-shadow: none;
    box-shadow: none;
    text-align-last: right;
  }
  .en__field__error {
    // z-index: 1;
  }
}

// Remove Number Input Spinners https://stackoverflow.com/a/4298216
input[type="number"]::-webkit-inner-spin-button,
input[type="number"]::-webkit-outer-spin-button {
  -webkit-appearance: none;
  // margin: 0;
  // -moz-appearance: textfield;
}

/* Placeholder styling */
/* Chrome, Firefox, Opera, Safari 10.1+ */::-webkit-input-placeholder {
  color: var(--color_light-gray);
  opacity: 1;
}

/* Firefox */:-ms-input-placeholder {
  color: var(--color_light-gray);
  opacity: 1;
  
}

/* Firefox */::-ms-input-placeholder {
  color: var(--color_light-gray);
  opacity: 1;
}

/* Firefox */::placeholder {
  color: var(--color_light-gray);
  opacity: 1;
}

/* Internet Explorer 10-11 */:-ms-input-placeholder {
  color: var(--color_light-gray);
}

/* Microsoft Edge */::-ms-input-placeholder {
  color: var(--color_light-gray);
}

/* Default Stylings for Common Form Fields */
.en__component--formblock {
  display: flex;
  flex-wrap: wrap;
}

/* All basic field types */
.en__field--survey,
.en__field--number,
.en__field--calendar,
.en__field--tripletext,
.en__field--tripleselect,
.en__field--splitselect,
.en__field--splittext,
.en__field--checkbox,
.en__field--radio,
.en__field--select,
.en__field--text, 
.en__field--telephone, 
.en__field--rating, 
.en__field--range, 
.en__field--password, 
.en__field--calendar, 
.en__field--imgselect{
  flex-basis: 100%;
  padding-left: 0;
  padding-right: 0;
}

.en__field--title,
.en__field--emailAddress,
.en__field--phoneNumber,
.en__field--phoneNumber2,
.en__field--country,
.en__field--address1,
.en__field--honname,
.en__field--infname,
.en__field--infemail,
.en__field--infcountry,
.en__field--infadd1,
.en__field--gftrsn,
.en__field--paymenttype,
.en__field--ccnumber,
.en__field--bankAccountType {
  flex-basis: 100%;
  padding-left: 0;
  padding-right: 0;
}

.en__field--splitselect.en__field--ccexpire {
  flex-basis: calc((100% / 3) * 2);
  min-width: auto;
  // left: 0;
  // right: 0;

  // & > .en__field__element > .en__field__item:first-of-type{
  //   padding-left:0;
  // }

  // & > .en__field__element > .en__field__item:last-of-type{
  //   padding-right:0;
  // }
  
}

// .en__field--firstName,
// .en__field--lastName,
// .en__field--bankAccountNumber,
// .en__field--bankRoutingNumber {
//   flex-basis: 50%;
// }

// .en__field--city,
// .en__field--region,
// .en__field--postcode,
// .en__field--infcity,
// .en__field--infreg,
// .en__field--infpostcd,
.en__field--ccvv {
  flex-basis: calc(100% / 3);
  min-width: auto;
}

// .en__field--city,
// .en__field--infcity,
// .en__field--ccexpire {
//   padding-left: 0;
//   padding-right: 0.5rem;
// }

// .en__field--lastName,
// .en__field--postcode,
// .en__field--infpostcd,
// .en__field--ccvv {
//   padding-left: 0.5rem;
//   padding-right: 0;
// }

// .en__field--recurrfreq,
// .en__field--recurrpay,
// .en__field--donationAmt {
//   padding-left: 0;
//   padding-right: 0;
// }

.en__field--recurrfreq .en__field__element,
.en__field--recurrpay .en__field__element,
.en__field--donationAmt .en__field__element,
.en__field--giveBySelect .en__field__element {
  justify-content: center;
}

.en__field--donationAmt.en__field--withOther
  .en__field__element--radio
  .en__field__item:nth-last-child(1) {
  display: flex !important;
}

.en__field--donationAmt.en__field--withOther
  .en__field__element--radio
  .en__field__item:nth-last-child(2) {
  display: none !important;
}